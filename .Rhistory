queen1 <- unique(queen1)
dim(queen1)
#SALE.PRICE<-sub("\\$","",queen1$SALE.PRICE)
GROSS.SQUARE.FEET<-as.numeric(gsub(",","",queen1$GROSS.SQUARE.FEET))
LAND.SQUARE.FEET<-as.numeric(gsub(",","",queen1$LAND.SQUARE.FEET)) #gsub(",","",)
TOTAL.UNITS <-as.numeric(gsub(",","",queen1$TOTAL.UNITS))
SALE.PRICE<-as.numeric(gsub("[\\$,]","",SALE.PRICE))
sapply(queen1,is.numeric)
queen1<-queen1[which(queen1$GROSS.SQUARE.FEET!="0" & queen1$LAND.SQUARE.FEET!="0" & queen1$SALE.PRICE!="$0"),]
queen2 <- data.frame(queen1)
queen1 <- queen2[which(SALE.PRICE >=100000),]
queen1<-queen1[which(queen1$GROSS.SQUARE.FEET!="0" & queen1$LAND.SQUARE.FEET!="0" & queen1$SALE.PRICE!="$0"),]
queen1<-queen1[which(queen1$GROSS.SQUARE.FEET!="0" & queen1$LAND.SQUARE.FEET!="0" & queen1$SALE.PRICE!="$0"),]
queen2 <- data.frame(queen1)
queen1 <- queen2[which(SALE.PRICE >=100000),]
library(gdata)
library(rpart)
library(ggplot2)
library(rpart.plot)
library(dplyr)
library('stringr')
library('readxl')
queen1<-read_xls('/Users/yiqingchen/Desktop/RPI/DataAnalytics/Lab/DataAnalytics2020-Yiqing-Chen/rollingsales_queens2.xls')
names(queen1) <- str_replace_all(names(queen1),' ','.')
names(queen1)
names(queen1) <- str_replace_all(names(queen1),'\n','.')
names(queen1)
is.na(queen1)
queen1 <- queen1[complete.cases(queen1),]
is.na(queen1$TAX.CLASS.AT.TIME.OF.SALE)
attach(queen1)
GROSS.SQUARE.FEET<-as.numeric(queen1$GROSS.SQUARE.FEET)
LAND.SQUARE.FEET<-as.numeric(queen1$LAND.SQUARE.FEET) #gsub(",","",)
TOTAL.UNITS <-as.numeric(queen1$TOTAL.UNITS)
SALE.PRICE<-sub("\\$","",queen1$SALE.PRICE)
library(gdata)
library(rpart)
library(ggplot2)
library(rpart.plot)
library(dplyr)
library('stringr')
library('readxl')
queen1<-read_xls('/Users/yiqingchen/Desktop/RPI/DataAnalytics/Lab/DataAnalytics2020-Yiqing-Chen/rollingsales_queens2.xls')
names(queen1) <- str_replace_all(names(queen1),' ','.')
names(queen1)
names(queen1) <- str_replace_all(names(queen1),'\n','.')
names(queen1)
GROSS.SQUARE.FEET<-as.numeric(queen1$GROSS.SQUARE.FEET)
LAND.SQUARE.FEET<-as.numeric(queen1$LAND.SQUARE.FEET) #gsub(",","",)
TOTAL.UNITS <-as.numeric(queen1$TOTAL.UNITS)
SALE.PRICE<-sub("\\$","",queen1$SALE.PRICE)
SALE.PRICE<-as.numeric(SALE.PRICE)
dim(queen1)
queen1 <- unique(queen1)
dim(queen1)
queen1<-queen1[which(queen1$GROSS.SQUARE.FEET!="0" & queen1$LAND.SQUARE.FEET!="0" & queen1$SALE.PRICE!="$0"),]
queen2 <- data.frame(queen1)
queen1 <- queen2[which(SALE.PRICE >=100000),]
queen1<-queen1[which(queen1$GROSS.SQUARE.FEET!=0 & queen1$LAND.SQUARE.FEET!=0 & queen1$SALE.PRICE!=0),]
queen2 <- data.frame(queen1)
queen1 <- queen2[which(SALE.PRICE >=100000),]
queen1 <- filter(queen2,SALE.PRICE>=10000)
library(gdata)
library(rpart)
library(ggplot2)
library(rpart.plot)
library(dplyr)
library('stringr')
library('readxl')
queen1<-read_xls('/Users/yiqingchen/Desktop/RPI/DataAnalytics/Lab/DataAnalytics2020-Yiqing-Chen/rollingsales_queens2.xls')
names(queen1) <- str_replace_all(names(queen1),' ','.')
names(queen1)
names(queen1) <- str_replace_all(names(queen1),'\n','.')
names(queen1)
attach(queen1)
GROSS.SQUARE.FEET<-as.numeric(queen1$GROSS.SQUARE.FEET)
LAND.SQUARE.FEET<-as.numeric(queen1$LAND.SQUARE.FEET) #gsub(",","",)
TOTAL.UNITS <-as.numeric(queen1$TOTAL.UNITS)
SALE.PRICE<-sub("\\$","",queen1$SALE.PRICE)
SALE.PRICE<-as.numeric(SALE.PRICE)
dim(queen1)
queen1 <- unique(queen1)
dim(queen1)
#SALE.PRICE<-sub("\\$","",queen1$SALE.PRICE)
GROSS.SQUARE.FEET<-as.numeric(gsub(",","",queen1$GROSS.SQUARE.FEET))
GROSS.SQUARE.FEET<-as.numeric(queen1$GROSS.SQUARE.FEET)
#SALE.PRICE<-as.numeric(gsub("[\\$,]","",SALE.PRICE))
sapply(queen1,is.numeric)
queen1<-queen1[which(queen1$GROSS.SQUARE.FEET!=0 & queen1$LAND.SQUARE.FEET!=0 & queen1$SALE.PRICE!=0),]
queen2 <- data.frame(queen1)
#queen1 <- queen2[which(SALE.PRICE >=100000),]
queen1 <- filter(queen2,SALE.PRICE>=10000)
#SALE.PRICE <- queen1$SALE.PRICE
queen1 <- queen1[SALE.PRICE > quantile(SALE.PRICE, .25) - 1.5*IQR(SALE.PRICE) &
SALE.PRICE < quantile(SALE.PRICE, .75) + 1.5*IQR(SALE.PRICE), ]
library(gdata)
library(rpart)
library(ggplot2)
library(rpart.plot)
library(dplyr)
library('stringr')
library('readxl')
queen1<-read.xls(file.choose(),pattern="BOROUGH",stringsAsFactors=FALSE,sheet=1)
#queen1<-read_xls('/Users/yiqingchen/Desktop/RPI/DataAnalytics/Lab/DataAnalytics2020-Yiqing-Chen/rollingsales_queens2.xls')
#is.na(queen1)
#queen1 <- queen1[complete.cases(queen1),]
#is.na(queen1$TAX.CLASS.AT.TIME.OF.SALE)
View(queen1)
str(queen1)
summary(queen1)
#names(queen1) <- str_replace_all(names(queen1),' ','.')
#names(queen1)
#names(queen1) <- str_replace_all(names(queen1),'\n','.')
#names(queen1)
attach(queen1)
GROSS.SQUARE.FEET<-as.numeric(queen1$GROSS.SQUARE.FEET)
#queen1<-read_xls('/Users/yiqingchen/Desktop/RPI/DataAnalytics/Lab/DataAnalytics2020-Yiqing-Chen/rollingsales_queens2.xls')
is.na(queen1)
queen1 <- queen1[complete.cases(queen1),]
is.na(queen1$TAX.CLASS.AT.TIME.OF.SALE)
GROSS.SQUARE.FEET<-as.numeric(queen1$GROSS.SQUARE.FEET)
LAND.SQUARE.FEET<-as.numeric(queen1$LAND.SQUARE.FEET) #gsub(",","",)
TOTAL.UNITS <-as.numeric(queen1$TOTAL.UNITS)
library(gdata)
library(rpart)
library(ggplot2)
library(rpart.plot)
library(dplyr)
library('stringr')
library('readxl')
queen1<-read_xls('/Users/yiqingchen/Desktop/RPI/DataAnalytics/Lab/DataAnalytics2020-Yiqing-Chen/rollingsales_queens2.xls')
is.na(queen1)
#is.na(queen1)
#queen1 <- queen1[complete.cases(queen1),]
#is.na(queen1$TAX.CLASS.AT.TIME.OF.SALE)
View(queen1)
str(queen1)
summary(queen1)
names(queen1) <- str_replace_all(names(queen1),' ','.')
names(queen1)
names(queen1) <- str_replace_all(names(queen1),'\n','.')
names(queen1)
attach(queen1)
dim(queen1)
queen1 <- unique(queen1)
dim(queen1)
#SALE.PRICE<-sub("\\$","",queen1$SALE.PRICE)
GROSS.SQUARE.FEET<-as.numeric(gsub(",","",queen1$GROSS.SQUARE.FEET))
LAND.SQUARE.FEET<-as.numeric(gsub(",","",queen1$LAND.SQUARE.FEET)) #gsub(",","",)
TOTAL.UNITS <-as.numeric(gsub(",","",queen1$TOTAL.UNITS))
queen1<-read.xls(file.choose(),pattern="BOROUGH",stringsAsFactors=FALSE,sheet=1)
is.na(queen1)
queen1 <- queen1[complete.cases(queen1),]
is.na(queen1$TAX.CLASS.AT.TIME.OF.SALE)
View(queen1)
str(queen1)
summary(queen1)
attach(queen1)
dim(queen1)
queen1 <- unique(queen1)
dim(queen1)
#SALE.PRICE<-sub("\\$","",queen1$SALE.PRICE)
GROSS.SQUARE.FEET<-as.numeric(gsub(",","",queen1$GROSS.SQUARE.FEET))
LAND.SQUARE.FEET<-as.numeric(gsub(",","",queen1$LAND.SQUARE.FEET)) #gsub(",","",)
TOTAL.UNITS <-as.numeric(gsub(",","",queen1$TOTAL.UNITS))
SALE.PRICE<-as.numeric(gsub("[\\$,]","",SALE.PRICE))
sapply(queen1,is.numeric)
queen1<-queen1[which(queen1$GROSS.SQUARE.FEET!=0 & queen1$LAND.SQUARE.FEET!=0 & queen1$SALE.PRICE!=0),]
queen2 <- data.frame(queen1)
#queen1 <- queen2[which(SALE.PRICE >=100000),]
queen1 <- filter(queen2,SALE.PRICE>=10000)
library(gdata)
library(rpart)
library(ggplot2)
library(rpart.plot)
library(dplyr)
library('stringr')
library('readxl')
queen1<-read_xls('/Users/yiqingchen/Desktop/RPI/DataAnalytics/Lab/DataAnalytics2020-Yiqing-Chen/rollingsales_queens2.xls')
#is.na(queen1)
#queen1 <- queen1[complete.cases(queen1),]
#is.na(queen1$TAX.CLASS.AT.TIME.OF.SALE)
View(queen1)
str(queen1)
summary(queen1)
names(queen1) <- str_replace_all(names(queen1),' ','.')
names(queen1)
names(queen1) <- str_replace_all(names(queen1),'\n','.')
names(queen1)
attach(queen1)
GROSS.SQUARE.FEET<-as.numeric(queen1$GROSS.SQUARE.FEET)
AND.SQUARE.FEET<-as.numeric(queen1$LAND.SQUARE.FEET) #gsub(",","",)
TOTAL.UNITS <-as.numeric(queen1$TOTAL.UNITS)
SALE.PRICE<-sub("\\$","",queen1$SALE.PRICE)
SALE.PRICE<-as.numeric(SALE.PRICE)
dim(queen1)
queen1 <- unique(queen1)
dim(queen1)
#SALE.PRICE<-as.numeric(gsub("[\\$,]","",SALE.PRICE))
sapply(queen1,is.numeric)
queen1<-queen1[which(queen1$GROSS.SQUARE.FEET!=0 & queen1$LAND.SQUARE.FEET!=0 & queen1$SALE.PRICE!=0),]
queen2 <- data.frame(queen1)
#queen1 <- queen2[which(SALE.PRICE >=100000),]
queen1 <- filter(queen2,SALE.PRICE>=10000)
#SALE.PRICE <- queen1$SALE.PRICE
queen1 <- queen1[SALE.PRICE > quantile(SALE.PRICE, .25) - 1.5*IQR(SALE.PRICE) &
SALE.PRICE < quantile(SALE.PRICE, .75) + 1.5*IQR(SALE.PRICE), ]
#queen1 <- queen2[which(SALE.PRICE >=100000),]
queen1 <- filter(queen2,SALE.PRICE>=10000)
hist(LAND.SQUARE.FEET)
hist(log(LAND.SQUARE.FEET))
hist(GROSS.SQUARE.FEET)
hist(log(GROSS.SQUARE.FEET))
hist(SALE.PRICE)
hist(log(SALE.PRICE))
ggplot(queen1,aes(x=SALE.PRICE))+geom_histogram(binwidth=8)
hist(log(TOTAL.UNITS))
qqplot(log(TOTAL.UNITS),log(SALE.PRICE))
hist(TOTAL.UNITS)
hist(log(TOTAL.UNITS))
boxplot(LAND.SQUARE.FEET)
#queen1 <- queen2[which(SALE.PRICE >=100000),]
queen2 <- filter(queen2,SALE.PRICE>=10000)
queen2 <- filtwe(queen2, GROSS.SQUARE.FEET <= 100000)
queen2 <- filter(queen2, GROSS.SQUARE.FEET <= 100000)
queen1 <- filter(queen2, LAND.SQUARE.FEET <= 100000)
boxplot(log(LAND.SQUARE.FEET))
boxplot(LAND.SQUARE.FEET)
hist(LAND.SQUARE.FEET)
hist(log(LAND.SQUARE.FEET))
hist(GROSS.SQUARE.FEET)
hist(log(GROSS.SQUARE.FEET))
hist(TOTAL.UNITS)
hist(log(TOTAL.UNITS))
hist(SALE.PRICE)
hist(log(SALE.PRICE))
qqplot(GROSS.SQUARE.FEET,LAND.SQUARE.FEET)
qqplot(log(GROSS.SQUARE.FEET),log(LAND.SQUARE.FEET))
boxplot(LAND.SQUARE.FEET)
boxplot(log(LAND.SQUARE.FEET))
boxplot(GROSS.SQUARE.FEET)
boxplot(log(GROSS.SQUARE.FEET))
library(gdata)
library(rpart)
library(ggplot2)
library(rpart.plot)
library(dplyr)
library('stringr')
library('readxl')
queen1<-read_xls('/Users/yiqingchen/Desktop/RPI/DataAnalytics/Lab/DataAnalytics2020-Yiqing-Chen/rollingsales_queens2.xls')
#is.na(queen1)
#queen1 <- queen1[complete.cases(queen1),]
#is.na(queen1$TAX.CLASS.AT.TIME.OF.SALE)
View(queen1)
str(queen1)
summary(queen1)
names(queen1) <- str_replace_all(names(queen1),' ','.')
names(queen1)
names(queen1) <- str_replace_all(names(queen1),'\n','.')
names(queen1)
attach(queen1)
GROSS.SQUARE.FEET<-as.numeric(queen1$GROSS.SQUARE.FEET)
AND.SQUARE.FEET<-as.numeric(queen1$LAND.SQUARE.FEET) #gsub(",","",)
TOTAL.UNITS <-as.numeric(queen1$TOTAL.UNITS)
SALE.PRICE<-sub("\\$","",queen1$SALE.PRICE)
SALE.PRICE<-as.numeric(SALE.PRICE)
dim(queen1)
queen1 <- unique(queen1)
dim(queen1)
#SALE.PRICE<-as.numeric(gsub("[\\$,]","",SALE.PRICE))
sapply(queen1,is.numeric)
queen1<-queen1[which(queen1$GROSS.SQUARE.FEET!=0 & queen1$LAND.SQUARE.FEET!=0 & queen1$SALE.PRICE!=0),]
queen2 <- data.frame(queen1)
#queen1 <- queen2[which(SALE.PRICE >=100000),]
queen2 <- filter(queen2,SALE.PRICE>=10000)
queen2 <- filter(queen2, GROSS.SQUARE.FEET <= 100000)
queen1 <- filter(queen2, LAND.SQUARE.FEET <= 100000)
hist(LAND.SQUARE.FEET)
hist(log(LAND.SQUARE.FEET))
hist(GROSS.SQUARE.FEET)
hist(log(GROSS.SQUARE.FEET))
hist(TOTAL.UNITS)
hist(log(TOTAL.UNITS))
hist(SALE.PRICE)
hist(log(SALE.PRICE))
qqplot(GROSS.SQUARE.FEET,LAND.SQUARE.FEET)
qqplot(log(GROSS.SQUARE.FEET),log(LAND.SQUARE.FEET))
boxplot(log(LAND.SQUARE.FEET))
boxplot(log(GROSS.SQUARE.FEET))
boxplot(LAND.SQUARE.FEET,varwidth = FALSE, range = 0, log = 'y', xlab = 'LAND SQUARE FEET')
boxplot(queen1$LAND.SQUARE.FEET,varwidth = FALSE, range = 0, log = 'y', xlab = 'LAND SQUARE FEET')
boxplot(log(queen1$GROSS.SQUARE.FEET))
boxplot(queen1$GROSS.SQUARE.FEET,varwidth = FALSE, range = 0, log = 'y', xlab = 'GROSS SQUARE FEET')
boxplot(queen1$SALE.PRICE,varwidth = FALSE, range = 0, log = 'y', xlab = 'SALE PRICE')
boxplot(log(queen1$SALE.PRICE))
boxplot(log(queen1$LAND.SQUARE.FEET))
geom_point()+labs(x = 'Gross Square Feet', y = 'Sale Price')
ggplot(data = queen1,aes(x = GROSS.SQUARE.FEET, y = SALE.PRICE)) + geom_point()+labs(x = 'Gross Square Feet', y = 'Sale Price')
boxplot(queen1$LAND.SQUARE.FEET,varwidth = FALSE, range = 0, log = 'y', xlab = 'LAND SQUARE FEET')
ggplot(data = queen1,aes(x = TOTAL.UNITS, y = SALE.PRICE)) + geom_point()+labs(x = 'Total Units', y = 'Sale Price')
ggplot(data = queen1,aes(x = LAND.SQUARE.FEET, y = SALE.PRICE)) + geom_point()+labs(x = 'Land Square Feet', y = 'Sale Price')
hist(LAND.SQUARE.FEET)
hist(log(LAND.SQUARE.FEET))
hist(GROSS.SQUARE.FEET)
hist(log(GROSS.SQUARE.FEET))
hist(TOTAL.UNITS)
hist(log(TOTAL.UNITS))
hist(SALE.PRICE)
hist(log(SALE.PRICE))
qqplot(GROSS.SQUARE.FEET,LAND.SQUARE.FEET)
qqplot(log(queen1$GROSS.SQUARE.FEET),log(queen1$LAND.SQUARE.FEET))
boxplot(queen1$LAND.SQUARE.FEET,varwidth = FALSE, range = 0, log = 'y', xlab = 'LAND SQUARE FEET')
boxplot(queen1$GROSS.SQUARE.FEET,varwidth = FALSE, range = 0, log = 'y', xlab = 'GROSS SQUARE FEET')
boxplot(queen1$SALE.PRICE,varwidth = FALSE, range = 0, log = 'y', xlab = 'SALE PRICE')
boxplot(queen1$TOTAL.UNITS,varwidth = FALSE, range = 0, log = 'y', xlab = 'TOTAL UNITS')
boxplot(log(queen1$TOTAL.UNITS))
boxplot(queen1$TOTAL.UNITS)
boxplot(log(queen1$GROSS.SQUARE.FEET))
boxplot(log(queen1$LAND.SQUARE.FEET))
boxplot(log(queen1$SALE.PRICE))
ggplot(data = queen1,aes(x = GROSS.SQUARE.FEET, y = SALE.PRICE)) + geom_point()+labs(x = 'Gross Square Feet', y = 'Sale Price')
ggplot(data = queen1,aes(x = LAND.SQUARE.FEET, y = SALE.PRICE)) + geom_point()+labs(x = 'Land Square Feet', y = 'Sale Price')
ggplot(data = queen1,aes(x = TOTAL.UNITS, y = SALE.PRICE)) + geom_point()+labs(x = 'Total Units', y = 'Sale Price')
# perform models
queens <- sort(sample(nrow(queen1),nrow(queen1)*.6))
train <- queen1[queens,]
test <- queen1[-queens,]
mlr1 <-lm(train$SALE.PRICE~tairn$GROSS.SQUARE.FEET+train$LAND.SQUARE.FEET+train$TOTAL.UNITS)
mlr1 <-lm(train$SALE.PRICE~train$GROSS.SQUARE.FEET+train$LAND.SQUARE.FEET+train$TOTAL.UNITS)
summary(mlr1)
abline(mlr1,col="red",lwd=2)
abline(mlr1,col="red",lwd=4)
plot(resid(mlr1))
abline(mlr1)
abline(mlr1,col="red",lwd=2)
plot(mlr1)
plot(mlr1)
hist(LAND.SQUARE.FEET)
hist(log(LAND.SQUARE.FEET))
plot(resid(mlr1))
mlr2 <-lm(train$log(SALE.PRICE)~train$log(GROSS.SQUARE.FEET)+train$log(LAND.SQUARE.FEET)+train$log(TOTAL.UNITS))
mlr2 <-lm(log(train$SALE.PRICE)~log(train$GROSS.SQUARE.FEET)+log(train$LAND.SQUARE.FEET)+log(train$TOTAL.UNITS))
LS <- log(train$SALE.PRICE)
mlr2 <-lm(formula=log(train$SALE.PRICE)~log(train$GROSS.SQUARE.FEET)+log(train$LAND.SQUARE.FEET)+log(train$TOTAL.UNITS))
LT <- log(train$TOTAL.UNITS)
LL <- log(train$LAND.SQUARE.FEET)
mlr2 <-lm(LS~LG+LL+LT)
LG <- log(train$GROSS.SQUARE.FEET)
mlr2 <-lm(LS~LG+LL+LT)
LT <- factor(train$TOTAL.UNITS)
mlr2 <-lm(LS~LG+LL+LT)
summary(mlr2)
summary(mlr2)
mlr2 <-lm(LS~LG+LL+LT)
LT <- log(train$TOTAL.UNITS)
mlr2 <-lm(LS~LG+LL+LT)
LS <- log1p(train$SALE.PRICE)
LG <- log1p(train$GROSS.SQUARE.FEET)
LL <- log1p(train$LAND.SQUARE.FEET)
LT <- log1p(train$TOTAL.UNITS)
mlr2 <-lm(LS~LG+LL+LT)
summary(mlr2)
plot(mlr2)
plot(resid(mlr2))
abline(mlr2,col="red",lwd=2)
summary(mlr1)
# k-means
set.seed(300)
k.max <- 12
wss <- sapply(1:k.max,function(k){kmeans(iris[,3:4],k,nstart=20,iter.max=20)$tot.withinss})
plot(1:k.max,wss,type='b',xlab='Number of Clusters(k)',ylab="Within Cluster Sum of Squares")
icluster <- kmeans(iris[,3:4],3,nstart=20)
wss <- sapply(1:k.max,function(k){kmeans(train[,14:16],k,nstart=20,iter.max=20)$tot.withinss})
wss
plot(1:k.max,wss,type='b',xlab='Number of Clusters(k)',ylab="Within Cluster Sum of Squares")
icluster <- kmeans(queen1[,14:16],3,nstart=20)
table(icluster$cluster,iris$Species)
table(icluster$cluster,queen1$SALE.PRICE)
table(icluster$cluster,queen1$TAX.CLASS.AT.PRESENT)
table(icluster$cluster,queen1$TAX.CLASS.AT.TIME.OF.SALE)
table(icluster$cluster,queen1$BUILDING.CLASS.AT.PRESENT)
table(icluster$cluster,queen1$TAX.CLASS.AT.TIME.OF.SALE)
# knn
normalize <- function(x){
return((x-min(x))/(max(x)-min(x)))
}
train[16:18]<-as.data.frame(lapply(train[16:18],normalize))
queen2 <- filter(queen2, LAND.SQUARE.FEET <= 100000)
queen2[16:18]<-as.data.frame(lapply(queen2[16:18],normalize))
ind <- sample(2,nrow(queen2),replace = TRUE, prob = c(0.6,0.4))
KNNTrain <- queen2[ind==1,]
KNNTest <- queen2[ind==2,]
sqrt(2918)
KNNpred <- knn(train = KNNTrain[14:16], test = KNNTest[14:16], cl = KNNTrain$TAX.CLASS.AT.TIME.OF.SALE,k=55)
# knn
library(class)
KNNpred <- knn(train = KNNTrain[14:16], test = KNNTest[14:16], cl = KNNTrain$TAX.CLASS.AT.TIME.OF.SALE,k=55)
table(KNNpred)
queen2[14:16]<-as.data.frame(lapply(queen2[14:16],normalize))
ind <- sample(2,nrow(queen2),replace = TRUE, prob = c(0.6,0.4))
KNNTrain <- queen2[ind==1,]
KNNTest <- queen2[ind==2,]
sqrt(2918)
KNNpred <- knn(train = KNNTrain[14:16], test = KNNTest[14:16], cl = KNNTrain$TAX.CLASS.AT.TIME.OF.SALE,k=55)
table(KNNpred)
KNNpred
KNNpred <- knn(train = KNNTrain[14:16], test = KNNTest[14:16], cl = KNNTrain$TAX.CLASS.AT.PRESENT,k=55)
table(KNNpred)
KNNpred
summary(mlr1)
plot(mlr1)
plot(resid(mlr1))
abline(mlr1,col="red",lwd=2)
summary(mlr2)
plot(mlr2)
plot(mlr2)
plot(mlr2)
plot(mlr2)
plot(resid(mlr2))
abline(mlr2,col="red",lwd=2)
table(icluster$cluster,queen1$NEIGHBORHOOD)
table(icluster$cluster,queen1$TAX.CLASS.AT.PRESENT)
icluster <- kmeans(queen1[,14:16],5,nstart=20)
table(icluster$cluster,queen1$TAX.CLASS.AT.PRESENT)
KNNpred <- knn(train = KNNTrain[14:16], test = KNNTest[14:16], cl = KNNTrain$TAX.CLASS.AT.PRESENT,k=40)
table(KNNpred)
KNNpred <- knn(train = KNNTrain[14:16], test = KNNTest[14:16], cl = KNNTrain$TAX.CLASS.AT.PRESENT,k=60)
table(KNNpred)
plot(1:k.max,wss,type='b',xlab='Number of Clusters(k)',ylab="Within Cluster Sum of Squares")
icluster <- kmeans(queen1[,14:16],5,nstart=20)
table(icluster$cluster,queen1$TAX.CLASS.AT.PRESENT)
LS <- logp(train$SALE.PRICE)
LG <- logp(train$GROSS.SQUARE.FEET)
LL <- logp(train$LAND.SQUARE.FEET)
LT <- log1p(train$TOTAL.UNITS)
mlr2 <-lm(LS~LG+LL+LT)
LS <- log(train$SALE.PRICE)
LG <- log(train$GROSS.SQUARE.FEET)
LL <- log(train$LAND.SQUARE.FEET)
LT <- log1p(train$TOTAL.UNITS)
mlr2 <-lm(LS~LG+LL+LT)
# perform models - MLR
queen1 <- queen1[complete.cases(queen1),]
queens <- sort(sample(nrow(queen1),nrow(queen1)*.6))
train <- queen1[queens,]
test <- queen1[-queens,]
mlr1 <-lm(train$SALE.PRICE~train$GROSS.SQUARE.FEET+train$LAND.SQUARE.FEET+train$TOTAL.UNITS)
library(gdata)
library(rpart)
library(ggplot2)
library(rpart.plot)
library(dplyr)
library('stringr')
library('readxl')
queen1<-read_xls('/Users/yiqingchen/Desktop/RPI/DataAnalytics/Lab/DataAnalytics2020-Yiqing-Chen/rollingsales_queens2.xls')
#is.na(queen1)
#queen1 <- queen1[complete.cases(queen1),]
#is.na(queen1$TAX.CLASS.AT.TIME.OF.SALE)
View(queen1)
str(queen1)
summary(queen1)
names(queen1) <- str_replace_all(names(queen1),' ','.')
names(queen1)
names(queen1) <- str_replace_all(names(queen1),'\n','.')
names(queen1)
attach(queen1)
GROSS.SQUARE.FEET<-as.numeric(queen1$GROSS.SQUARE.FEET)
AND.SQUARE.FEET<-as.numeric(queen1$LAND.SQUARE.FEET) #gsub(",","",)
TOTAL.UNITS <-as.numeric(queen1$TOTAL.UNITS)
SALE.PRICE<-sub("\\$","",queen1$SALE.PRICE)
SALE.PRICE<-as.numeric(SALE.PRICE)
dim(queen1)
queen1 <- unique(queen1)
dim(queen1)
#SALE.PRICE<-as.numeric(gsub("[\\$,]","",SALE.PRICE))
sapply(queen1,is.numeric)
queen1<-queen1[which(queen1$GROSS.SQUARE.FEET!=0 & queen1$LAND.SQUARE.FEET!=0 & queen1$SALE.PRICE!=0),]
queen2 <- data.frame(queen1)
#queen1 <- queen2[which(SALE.PRICE >=100000),]
queen2 <- filter(queen2,SALE.PRICE>=10000)
queen2 <- filter(queen2, GROSS.SQUARE.FEET <= 100000)
queen1 <- filter(queen2, LAND.SQUARE.FEET <= 100000)
hist(LAND.SQUARE.FEET)
# perform models - MLR
queens <- sort(sample(nrow(queen1),nrow(queen1)*.6))
train <- queen1[queens,]
test <- queen1[-queens,]
mlr1 <-lm(train$SALE.PRICE~train$GROSS.SQUARE.FEET+train$LAND.SQUARE.FEET+train$TOTAL.UNITS)
summary(mlr1)
plot(mlr1)
LL <- log(train$LAND.SQUARE.FEET)
LS <- log(train$SALE.PRICE)
LG <- log(train$GROSS.SQUARE.FEET)
LL <- log(train$LAND.SQUARE.FEET)
LT <- log(train$TOTAL.UNITS)
mlr2 <-lm(LS~LG+LL+LT)
LT <- log1p(train$TOTAL.UNITS)
mlr2 <-lm(LS~LG+LL+LT)
summary(mlr2)
# k-means
set.seed(300)
k.max <- 12
wss <- sapply(1:k.max,function(k){kmeans(train[,14:16],k,nstart=20,iter.max=20)$tot.withinss})
wss
plot(1:k.max,wss,type='b',xlab='Number of Clusters(k)',ylab="Within Cluster Sum of Squares")
icluster <- kmeans(queen1[,14:16],5,nstart=20)
table(icluster$cluster,queen1$TAX.CLASS.AT.PRESENT)
# knn
library(class)
normalize <- function(x){
return((x-min(x))/(max(x)-min(x)))
}
